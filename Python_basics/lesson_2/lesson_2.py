# 1. Создать список и заполнить его элементами различных типов данных. Реализовать
# скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки
# типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

ls = [1, 'ferfe', {'d': [1, 3, 5]}, 1.45, (1, 3, 5), True]

for i in ls:
    print(type(i))

# 2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются
# элементы с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить
# на своем месте. Для заполнения списка элементов необходимо использовать функцию input().

ls = input("Введите числа или буквы через пробел: ").split(' ')

j = 0
for i in range(int(len(ls) / 2)):
    ls[j], ls[j + 1] = ls[j + 1], ls[j]
    j += 2

print(ls)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года
# относится месяц (зима, весна, лето, осень). Напишите решения через list и через dict.

num = int(input('Введите номер месяца: '))

seasons = {'Зима': [12, 1, 2],
           'Весна': [3, 4, 5],
           'Лето': [6, 7, 8],
           'Осень': [9, 10, 11]}

for i in seasons:
    if num in seasons[i]:
        print(i)
    else:
        continue

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово
# с новой строки. Строки необходимо пронумеровать. Если в слово длинное, выводить только
# первые 10 букв в слове.

words = input('Введите строку: ').split(' ')

for w in enumerate(words):
    print('{}. {}'.format(w[0], w[1][:10]))

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы
# с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.

num = int(input('Введите число: '))

ls = [7, 5, 3, 3, 2]
ls.append(num)

print(sorted(ls, reverse=True))

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж
# хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения). Структуру нужно сформировать программно,
# т.е. запрашивать все данные у пользователя.
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})

products = [
    (1, {'название': 'компьютер', 'цена': 20000, 'количество': 5, 'ед': 'шт.'}),
    (2, {'название': 'принтер', 'цена': 6000, 'количество': 2, 'ед': 'шт.'}),
    (3, {'название': 'сканер', 'цена': 2000, 'количество': 7, 'ед': 'шт.'}),
]

category = input('Введите название категории товара: ')
price = int(input('Введите цену товара: '))
quantity = int(input('Введите количество товара: '))
unit = input('Введите еденицы товара: ')
products.append((len(products) + 1,
                 {'название': category,
                  'цена': price,
                  'количество': quantity,
                  'eд': unit
                  }))

analitics = {
    'название': [],
    'цена': [],
    'количество': [],
    'ед': [],
}

for p in products:
    if p[1]['название'] not in analitics['название']:
        analitics['название'].append(p[1]['название'])
    if p[1]['цена'] not in analitics['цена']:
        analitics['цена'].append(p[1]['цена'])
    if p[1]['количество'] not in analitics['количество']:
        analitics['количество'].append(p[1]['количество'])
    if p[1]['ед'] not in analitics['ед']:
        analitics['ед'].append(p[1]['ед'])
